image: docker:20

services:
  - docker:20-dind

variables:
  DOCKER_TLS_CERTDIR: ""
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay

stages:
  #- test
  - deploy-production

# test:
#   stage: test
#   services:
#   - name: docker:20-dind
#     command: ["--tls=false"]
#   script:
#     - docker-compose run --rm admin-api sh -c "npm run migration:run:ci && npm run test:ci"
#   artifacts:
#     when: always
#     reports:
#       junit:
#         - junit.xml

deploy-production:
  stage: deploy-production
  image:
    name: amazon/aws-cli
    entrypoint: [""]
  services:
  - name: docker:20-dind
    command: ["--tls=false"]
  before_script:
    - amazon-linux-extras install docker
    - curl -SL https://github.com/docker/compose/releases/download/v2.10.2/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose
    - chmod +x /usr/local/bin/docker-compose
    - yum install -y yum-utils
    - yum-config-manager --add-repo https://rpm.releases.hashicorp.com/AmazonLinux/hashicorp.repo
    - yum -y install terraform-1.2.9
    - aws --version
    - docker --version
    - docker-compose --version
    - terraform -v
  environment: production
  script:
    - docker build . -t validate-admin-backend
    - docker login -u AWS -p $(aws ecr get-login-password --region eu-west-1) $APP_REGISTRY_URL
    - docker tag validate-admin-backend:latest $APP_REGISTRY_URL/$NODE_REPOSITORY_NAME:latest
    - docker push $APP_REGISTRY_URL/$NODE_REPOSITORY_NAME:latest
    - cd terraform
    - terraform init
    - terraform apply -auto-approve

  only:
    - main